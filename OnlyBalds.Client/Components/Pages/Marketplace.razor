@page "/Marketplace"

@attribute [Authorize]

@inject ILogger<Marketplace> logger
@inject IJSRuntime JsRuntime
@inject NavigationManager NavManager

@rendermode InteractiveWebAssembly

<title>Store</title>

@if(_isDownloading)
{
    <div class="d-flex justify-content-center align-items-center vh-100">
        <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
        </div>
    </div>
}
else
{
    <div id="my-store-103074754" class="ecwid-store-container" style="width: 100%; height: auto;"></div>
}

@code {
    private bool _isDownloading = true;
    private IJSObjectReference? _jsModule;
    private DotNetObjectReference<Marketplace>? _objRef;

    /// <inheritdoc/>
    protected override async Task OnInitializedAsync()
    {
        _objRef = DotNetObjectReference.Create(this);
        await base.OnInitializedAsync();
    }

    /// <inheritdoc/>
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await InitializeEcwidWidget(isFirstRender: firstRender);
        }
    }

    /// <summary>
    /// Initializes the Ecwid widget.
    /// </summary>
    private async Task InitializeEcwidWidget(bool isFirstRender)
    {
        if (_jsModule is null)
        {
            _jsModule = await JsRuntime.InvokeAsync<IJSObjectReference>("import", "./Components/Pages/Marketplace.razor.js");
        }

        await _jsModule.InvokeVoidAsync("onLoad");
        await _jsModule.InvokeVoidAsync("initializeMarketplace", "my-store-103074754", _objRef, isFirstRender);

        _isDownloading = false;
        StateHasChanged();
    }
}